{"remainingRequest":"C:\\Users\\dilipr\\JHipster\\aligncheck\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\dilipr\\JHipster\\aligncheck\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\dilipr\\JHipster\\aligncheck\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\dilipr\\JHipster\\aligncheck\\node_modules\\tslint-loader\\index.js!C:\\Users\\dilipr\\JHipster\\aligncheck\\src\\main\\webapp\\app\\shared\\util\\observable-unsubscription-utils.ts","dependencies":[{"path":"C:\\Users\\dilipr\\JHipster\\aligncheck\\src\\main\\webapp\\app\\shared\\util\\observable-unsubscription-utils.ts","mtime":1573639612000},{"path":"C:\\Users\\dilipr\\JHipster\\aligncheck\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\dilipr\\JHipster\\aligncheck\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dilipr\\JHipster\\aligncheck\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dilipr\\JHipster\\aligncheck\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\dilipr\\JHipster\\aligncheck\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\dilipr\\JHipster\\aligncheck\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqDQogKiBAYXV0aG9yIEZhaXphbCBWYXNheWENCiAqIEEgdXRpbGl0eSBjbGFzcyB0aGF0IHByb3ZpZGVzIG1ldGhvZCB0byB1bnNic3JpYmUgdGhlIG9ic2VydmFibGVzIHJlZ2lzdGVyZWQgYnkgYSBjb21wb25lbnQuDQogKi8NCi8vIGltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzL09ic2VydmFibGUnOw0KaW1wb3J0IHsgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnOw0KaW1wb3J0IHsgUmVwbGF5U3ViamVjdCB9IGZyb20gJ3J4anMnOw0KZXhwb3J0IGNsYXNzIE9ic2VydmFibGVVbnN1YnNjcmlwdGlvblV0aWxpdGllcyB7DQogICAgLyoqDQogICAgICogQSBtZXRob2QgdG8gYXBwbHkgbmV3IG5nRGVzdHJveSBtZXRob2QgdG8gdGhlIGNvbXBvbmVudC4NCiAgICAgKiBAcGFyYW0gY29tcG9uZW50IFRoZSBjb21wb25lbnQgd2hvc2Ugc3Vic2NyaWJlcnMgbmVlZHMgdG8gYmUgdW5zdWJzY3JpYmVkIG9uIGNvbXBvbmVudHMgZGVzdHJ1Y3Rpb24NCiAgICAgKi8NCiAgICBzdGF0aWMgY29tcG9uZW50RGVzdHJveWVkKGNvbXBvbmVudCkgew0KICAgICAgICBpZiAoY29tcG9uZW50Ll9fY29tcG9uZW50RGVzdHJveWVkJCkgew0KICAgICAgICAgICAgcmV0dXJuIGNvbXBvbmVudC5fX2NvbXBvbmVudERlc3Ryb3llZCQ7DQogICAgICAgIH0NCiAgICAgICAgY29uc3Qgb2xkTmdPbkRlc3Ryb3kgPSBjb21wb25lbnQubmdPbkRlc3Ryb3k7DQogICAgICAgIGNvbnN0IHN0b3AkID0gbmV3IFJlcGxheVN1YmplY3QoKTsNCiAgICAgICAgY29tcG9uZW50Lm5nT25EZXN0cm95ID0gKCkgPT4gew0KICAgICAgICAgICAgY29uc3QgYSA9IG9sZE5nT25EZXN0cm95ICYmIG9sZE5nT25EZXN0cm95LmFwcGx5KGNvbXBvbmVudCk7DQogICAgICAgICAgICBzdG9wJC5uZXh0KHRydWUpOw0KICAgICAgICAgICAgc3RvcCQuY29tcGxldGUoKTsNCiAgICAgICAgfTsNCiAgICAgICAgcmV0dXJuIChjb21wb25lbnQuX19jb21wb25lbnREZXN0cm95ZWQkID0gc3RvcCQuYXNPYnNlcnZhYmxlKCkpOw0KICAgIH0NCiAgICAvKioNCiAgICAgKiBBIG1ldGhvZCBoYXQgd2FpdHMgdW50aWxsIHRoZSBjb21wb25lbnQgaXMgZGVzdHJveWVkLiBPbmNlIGRlc3Ryb3llZCwgaXQgY2FsbHMgT2JzZXJ2YWJsZVVuc3Vic2NyaXB0aW9uVXRpbGl0aWVzLmNvbXBvbmVudERlc3Ryb3llZCgpDQogICAgICogQHBhcmFtIGNvbXBvbmVudCBUaGUgY29tcG9uZW50IHdob3NlIHN1YnNjcmliZXJzIG5lZWRzIHRvIGJlIHVuc3Vic2NyaWJlZCBvbiBjb21wb25lbnRzIGRlc3RydWN0aW9uDQogICAgICovDQogICAgc3RhdGljIHVudGlsQ29tcG9uZW50RGVzdHJveWVkKGNvbXBvbmVudCkgew0KICAgICAgICByZXR1cm4gKHNvdXJjZSkgPT4gc291cmNlLnBpcGUodGFrZVVudGlsKE9ic2VydmFibGVVbnN1YnNjcmlwdGlvblV0aWxpdGllcy5jb21wb25lbnREZXN0cm95ZWQoY29tcG9uZW50KSkpOw0KICAgIH0NCn0NCg=="},{"version":3,"file":"C:\\Users\\dilipr\\JHipster\\aligncheck\\src\\main\\webapp\\app\\shared\\util\\observable-unsubscription-utils.ts","sourceRoot":"","sources":["C:\\Users\\dilipr\\JHipster\\aligncheck\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\dilipr\\JHipster\\aligncheck\\node_modules\\tslint-loader\\index.js!C:\\Users\\dilipr\\JHipster\\aligncheck\\src\\main\\webapp\\app\\shared\\util\\observable-unsubscription-utils.ts"],"names":[],"mappings":"AAAA;;;GAGG;AACH,gDAAgD;AAChD,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAC;AAC3C,OAAO,EAAc,aAAa,EAAE,MAAM,MAAM,CAAC;AASjD,MAAM,OAAO,iCAAiC;IAC5C;;;OAGG;IACH,MAAM,CAAC,kBAAkB,CAAC,SAAwB;QAChD,IAAI,SAAS,CAAC,qBAAqB,EAAE;YACnC,OAAO,SAAS,CAAC,qBAAqB,CAAC;SACxC;QACD,MAAM,cAAc,GAAG,SAAS,CAAC,WAAW,CAAC;QAC7C,MAAM,KAAK,GAAG,IAAI,aAAa,EAAQ,CAAC;QACxC,SAAS,CAAC,WAAW,GAAG,GAAG,EAAE;YAC3B,MAAM,CAAC,GAAG,cAAc,IAAI,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC5D,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjB,KAAK,CAAC,QAAQ,EAAE,CAAC;QACnB,CAAC,CAAC;QACF,OAAO,CAAC,SAAS,CAAC,qBAAqB,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;IAClE,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,uBAAuB,CAAI,SAAwB;QACxD,OAAO,CAAC,MAAqB,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,iCAAiC,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC5H,CAAC;CACF","sourcesContent":["/**\n * @author Faizal Vasaya\n * A utility class that provides method to unsbsribe the observables registered by a component.\n */\n// import { Observable } from 'rxjs/Observable';\nimport { takeUntil } from 'rxjs/operators';\nimport { Observable, ReplaySubject } from 'rxjs';\n// import { ReplaySubject } from 'rxjs/ReplaySubject';\n\n// Makes sure that the component to be destroyed had an ngOnDestroy registered.\nexport interface OnDestroyLike {\n  ngOnDestroy(): void;\n  [key: string]: any;\n}\n\nexport class ObservableUnsubscriptionUtilities {\n  /**\n   * A method to apply new ngDestroy method to the component.\n   * @param component The component whose subscribers needs to be unsubscribed on components destruction\n   */\n  static componentDestroyed(component: OnDestroyLike): Observable<true> {\n    if (component.__componentDestroyed$) {\n      return component.__componentDestroyed$;\n    }\n    const oldNgOnDestroy = component.ngOnDestroy;\n    const stop$ = new ReplaySubject<true>();\n    component.ngOnDestroy = () => {\n      const a = oldNgOnDestroy && oldNgOnDestroy.apply(component);\n      stop$.next(true);\n      stop$.complete();\n    };\n    return (component.__componentDestroyed$ = stop$.asObservable());\n  }\n\n  /**\n   * A method hat waits untill the component is destroyed. Once destroyed, it calls ObservableUnsubscriptionUtilities.componentDestroyed()\n   * @param component The component whose subscribers needs to be unsubscribed on components destruction\n   */\n  static untilComponentDestroyed<T>(component: OnDestroyLike): (source: Observable<T>) => Observable<T> {\n    return (source: Observable<T>) => source.pipe(takeUntil(ObservableUnsubscriptionUtilities.componentDestroyed(component)));\n  }\n}\n"]}]}